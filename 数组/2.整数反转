### 整数反转

- 给你一个 32 位的有符号整数 x ，返回将 x 中的数字部分反转后的结果。

- 如果反转后整数超过 32 位的有符号整数的范围 [−231,  231 − 1] ，就返回 0。

- 假设环境不允许存储 64 位整数（有符号或无符号）。

### result  = result * 10 + x % 10 直接去除末位 x % 10（负数还是负数,不关心正负) 拼接到result中
### x /10 | 0 强制转为32位无符号整数 
### 通过 | 0 取整,无论正负,只移出小数点部分(整数向下取整,负数向上取整)
### result | 0 超过32位的整数转换结果不等于自身，可用作溢出判断

···js

   let reverses = function (x) {
    let result = 0;
    while(x != 0){
      result = result *10 + x % 10
      x = (x/10) | 0 
    }
    return (result | 0 ) ?result:0
   }

```
